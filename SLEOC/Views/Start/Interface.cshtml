@model SLEOC.Models.InterfaceModel
@using SLEOC.Helpers

@{
    ViewBag.Title = "Interface";
}

<!--SignalR-->
<script src="@Url.Content("~/Scripts/jquery.signalR-2.0.3.js")"></script>
<script src="~/signalr/hubs"></script>
<script type="text/javascript"
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD_Y57vIWV9mDVfzM1Y0EJcE9VeWbHyggU"></script>
<script>
        // Reference the auto-generated proxy for the hub.
        var key = '@(!Model.Key.IsEmpty() ? Model.Key : "public" )';
    var currentTeam = 0;
    var currentTeamName = "n/a";
    var enableJoinTeam = false;
    var cardHubClient = jQuery.connection.cardHub;

    //jQuery.connection.hub.disconnected(function () {
    //    toggleJoinTeam(false);
    //    console.log("Disconnected from SignalR");
    //});

    //jQuery.connection.hub.reconnected(function () {
    //    console.log("Reconnecting to SignalR");
    //});

    //jQuery.connection.hub.connectionSlow(function () {
    //    console.log("Connection slow");
    //});

    function goToCard(cardNumber) {
        var card = document.getElementById("card");
        var left = cardNumber * 640;
        left = 640 * Math.floor(left / 640);
        card.style.left = (left * -1) + "px";
        updateScrollButton();
    }

    function goToLatestCard() {
        var latestPage = jQuery("#card article").length - 1;
        goToCard(latestPage);
    }

    function updateTeamDisplay() {
        var teamDisplay = jQuery("#currentTeam");
        var teamColor = "yellow";

        switch(currentTeam) {
            case 1:
                teamColor = "red";
                break;
            case 2:
                teamColor = "blue";
                break;
            case 3:
                teamColor = "green";
                break;
            case 4:
                teamColor = "yellow";
                break;
            default:
                teamColor = "muted";
                break;
        }

        jQuery(teamDisplay).html("Current Team: <span class='" + teamColor + "'>" + currentTeamName + "</span>");
    }

    function updateScrollButton() {
        var card = document.getElementById("card");
        var leftScroll = document.getElementById("previousCard");
        var rightScroll = document.getElementById("nextCard");
        var count = jQuery("#card article").length;
        var left = parseFloat(card.style.left);

        console.log("left: " + left);

        if (left == 0)
        {
            console.log("Hiding left button");
            leftScroll.style.display = "none";
        }
        else
        {
            console.log("Showing left button");
            leftScroll.style.display = "block";
        }

        if (left > (count - 1) * -640)
        {
            console.log("Showing right button");
            rightScroll.style.display = "block";
        }
        else
        {
            console.log("Hiding right button");
            rightScroll.style.display = "none";
        }
    }

    function nextCard()
    {
        var card = document.getElementById("card");
        var left = card.getBoundingClientRect().left - 640;
        left = 640 * Math.floor(left / 640);
        card.style.left = left + "px";
        updateScrollButton();
    }

    function previousCard()
    {
        var card = document.getElementById("card");
        var left = card.getBoundingClientRect().left + 640;
        left = 640 * Math.floor(left / 640);
        card.style.left = left + "px";
        updateScrollButton();
    }

    function initialize()
    {
        var card = document.getElementById("card");
        var leftScroll = document.getElementById("previousCard");
        var rightScroll = document.getElementById("nextCard");
        teamStandBy = true;
        card.style.left = "0px";
        leftScroll.style.display = "none";
        rightScroll.style.display = "none";
        updateScrollButton();
    }

    function toggleJoinTeam(toggle)
    {
        enableJoinTeam = toggle;
        console.log("Team join toggled: " + toggle);
        if (!toggle) {
            var teamDisplay = jQuery("#currentTeam");
            jQuery(teamDisplay).html("Disconnected - <span class='muted'>Please wait</span>");
        }
        else
        {
            updateTeamDisplay();
        }
    }

    function attachCardToEvent() {
        jQuery("article .team").click(function () {
            goToCard(1);
        });

        jQuery("article .close").click(function () {
            jQuery(this).parent().remove();
            var cards = jQuery("article");
            var count = cards.length;

            for (var i = 0; i < count; i++) {
                cards.get(i).style.left = (640 * i) + "px";
            }

            goToCard(1);
        });

        jQuery("article .send").click(function () {
            console.log("Pre-Encoded Data: " + jQuery(this).parent().html());
            var sharedCard = jQuery(this).parent().clone().wrap('<div>').parent().html();
            var helpersUrl = '@Url.Action("Encrypt", "HelperApi", new { httproute = "" })';
            jQuery.ajax({
                type: 'GET',
                url: helpersUrl,
                cache: false,
                data: {
                    text: encodeURIComponent(sharedCard)
                },
                success: function (response) {
                    console.log("Card Data Sent: " + response);
                    cardHubClient.server.sendCard(response, currentTeamName);
                }
            });
        });
    }

    function addTeamMenu() {
        var cardArea = jQuery('#card');
        var ajaxUrl = '@Url.Action("Team", "Card")';
        jQuery.ajax({
            type: 'GET',
            url: ajaxUrl,
            cache: false,
            data: {

            },
            success: function (response) {
                jQuery(cardArea).append(response);
                Card.init();
                goToLatestCard();

                jQuery("#joinTeamOne").click(function () {
                    joinTeam(1);
                });

                jQuery("#joinTeamTwo").click(function () {
                    joinTeam(2);
                });

                jQuery("#joinTeamThree").click(function () {
                    joinTeam(3);
                });

                jQuery("#joinTeamFour").click(function () {
                    joinTeam(4);
                });
            }
        });
    }

    function addCard(cardType, encryptedParameter) {
        var cardArea = jQuery('#card');
        var ajaxUrl = '@Url.Action("Index", "EncryptedCard")';
        console.log("Requesting card html from " + ajaxUrl);
        jQuery.ajax({
            type: 'GET',
            url: ajaxUrl,
            cache: false,
            data: {
                type: cardType,
                encrypted: encryptedParameter
            },
            success: function (response) {
                jQuery(cardArea).append(response);
                Card.init();
                goToLatestCard();
                attachCardToEvent();
            }
        });
    }

    function joinTeam(team) {
        if (enableJoinTeam) {
            currentTeam = team;
            switch (team) {
                case 1:
                    currentTeamName = "Planning";
                    break;
                case 2:
                    currentTeamName = "Operations";
                    break;
                case 3:
                    currentTeamName = "Logistics";
                    break;
                case 4:
                    currentTeamName = "EOC Management";
                    break;
                default:
                    currentTeamName = "Unknown"
                    break;
            }

            cardHubClient.server.joinTeam(currentTeamName);
        }
        else {
            console.log("Please wait to join team");
        }
    }

    jQuery(function () {
        initialize();

        document.getElementById("previousCard").onclick = function () {
            previousCard();
        };

        document.getElementById("nextCard").onclick = function () {
            nextCard();
        };

        cardHubClient.client.log = function (message) {
            console.log(message);
        }

        cardHubClient.client.goToCard = function (cardNumber) {
            goToCard(cardNumber);
        }

        cardHubClient.client.updateTeamDisplay = function () {
            updateTeamDisplay();
        }

        cardHubClient.client.toggleJoinTeam = function (toggle) {
            toggleJoinTeam(toggle);
        }

        cardHubClient.client.receiveCard = function (data) {
            console.log("Recieving Card Data: " + data);
            var cardArea = jQuery('#card');
            jQuery(cardArea).append(data);
            Card.init();
            goToLatestCard();
            attachCardToEvent();
        }

        cardHubClient.client.addCard = function (cardType, encryptedParameter) {
            addCard(cardType, encryptedParameter);
        }

        console.log("Connecting to Hub...");
        jQuery.connection.hub.start({ transport: "longPolling" }).done(function () {
            jQuery.connection.hub.logging = true;
            jQuery.connection.hub.transportConnectTimeout = 10000;
            addTeamMenu();

            console.log('Now connected, connection ID = ' + jQuery.connection.hub.id);
            toggleJoinTeam(true);
            cardHubClient.server.joinHub('@(!Model.Key.IsEmpty() ? Model.Key : "public" )');
            //cardHubClient.server.joinTeam(currentTeamName);

        }).fail(function(error) {
            console.log('Invocation of start failed. Error: ' + error);
        });
    });
</script>

<div id="card" class="card">
    @Html.Action("Start", "Card")
</div>
<div id="previousCard" class="scroll leftscroll"></div>
<div id="nextCard" class="scroll rightscroll"></div>
